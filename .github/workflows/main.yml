# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    # The type of runner that the job will run on
    runs-on: ${{ matrix.os }}

    steps:
    - name: Setup Java environment based on setup-java
      uses: actions/setup-java@v1
      with:
        java-version: '11'
        java-package: jdk
        architecture: x64
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2

    # build cache
    - name: Cache Gradle Cache
      uses: actions/cache@v1.1.2
      with:
        path: ~/.gradle/caches
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
        # An ordered list of keys to use for restoring the cache if no cache hit occurred for key
        restore-keys: |
          ${{ runner.os }}-gradle-
    - name: Cache gradle wrapper
      uses: actions/cache@v1.1.2
      with:
        path: ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}
    - name: Cache konan
      uses: actions/cache@v1.1.2
      with:
        path: ~/.konan
        key: ${{ runner.os }}-konan-cache-${{ hashFiles('buildSrc/build.gradle.kts') }}
        # An ordered list of keys to use for restoring the cache if no cache hit occurred for key
        restore-keys: |
          ${{ runner.os }}-konan-cache-
    - name: Own sdk dir
      if: runner.os == 'Linux'
      run: sudo chown $USER:$USER $ANDROID_HOME -R
    - name: Download ndk
      run: ./gradlew downloadNdk --info --stacktrace
    - name: build and test
      run: ./gradlew allTests --info --stacktrace
    - name: run spotless on build plugin
      run: ./gradlew -p buildPlugin spotlessCheck --stacktrace
    - name: run spotless
      run: ./gradlew spotlessCheck --stacktrace
    - name: stop daemon
      run: ./gradlew --stop
    - name: build dist
      run: ./gradlew buildOnServer --stacktrace
    - name: Upload test results for sqlitebindings
      if: always()
      uses: actions/upload-artifact@v2
      with:
        name: sqlitebindings-test-reports
        path: sqlitebindings/build/reports
    - name: Upload test results for ksqlite3
      if: always()
      uses: actions/upload-artifact@v2
      with:
        name: ksqlite3-test-reports
        path: ksqlite3/build/reports
    - name: Upload JNI failures
      if: always()
      uses: actions/upload-artifact@v2
      with:
        name: ksqlite3-jni-errors
        path: ksqlite3/hs_err*
    - name: Upload Dist
      if: always()
      uses: actions/upload-artifact@v2
      with:
        name: ${{ matrix.os }}-dist
        path: build/dist
  androidTests:
    runs-on: macos-latest
    steps:
    - name: Setup Java environment to j11
      uses: actions/setup-java@v1
      with:
        java-version: '11'
        java-package: jdk
        architecture: x64
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
    # build cache
    - name: Cache Gradle Cache
      uses: actions/cache@v1.1.2
      with:
        path: ~/.gradle/caches
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
        # An ordered list of keys to use for restoring the cache if no cache hit occurred for key
        restore-keys: |
          ${{ runner.os }}-gradle-
    - name: Cache gradle wrapper
      uses: actions/cache@v1.1.2
      with:
        path: ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}
    - name: Cache konan
      uses: actions/cache@v1.1.2
      with:
        path: ~/.konan
        key: ${{ runner.os }}-konan-cache-${{ hashFiles('buildSrc/build.gradle.kts') }}
        # An ordered list of keys to use for restoring the cache if no cache hit occurred for key
        restore-keys: |
          ${{ runner.os }}-konan-cache-
    - name: Download ndk
      run: ./gradlew downloadNdk --info
    # we are not using matrix build here as the overhead of the build is a lot, no reason to spend unnecessary CI
    # resources even though matrix would be faster.
    - name: Run Integration Tests 21
      uses: ReactiveCircus/android-emulator-runner@v2.17.0
      env:
        ACTIONS_ALLOW_UNSECURE_COMMANDS: true
      with:
        api-level: 21
        arch: x86_64
        script: ./gradlew connectedCheck --stacktrace
    - name: Run Integration Tests 24
      uses: ReactiveCircus/android-emulator-runner@v2.17.0
      env:
        ACTIONS_ALLOW_UNSECURE_COMMANDS: true
      with:
        api-level: 24
        arch: x86_64
        script: ./gradlew connectedCheck --stacktrace
    - name: Run Integration Tests 27
      uses: ReactiveCircus/android-emulator-runner@v2.17.0
      env:
        ACTIONS_ALLOW_UNSECURE_COMMANDS: true
      with:
        api-level: 27
        arch: x86_64
        script: ./gradlew connectedCheck --stacktrace
    - name: Run Integration Tests 29
      uses: ReactiveCircus/android-emulator-runner@v2.17.0
      env:
        ACTIONS_ALLOW_UNSECURE_COMMANDS: true
      with:
        api-level: 29
        arch: x86_64
        script: ./gradlew connectedCheck --stacktrace

    - name: Upload build reports
      if: always()
      uses: actions/upload-artifact@v2
      with:
        name: android test results
        path: ./**/build/reports
  buildFinalArtifacts:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Setup Java environment based on setup-java
        uses: actions/setup-java@v1
        with:
          java-version: '11'
          java-package: jdk
          architecture: x64
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # build cache
      - name: Cache Gradle Cache
        uses: actions/cache@v1.1.2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          # An ordered list of keys to use for restoring the cache if no cache hit occurred for key
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Cache gradle wrapper
        uses: actions/cache@v1.1.2
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}
      - name: Cache konan
        uses: actions/cache@v1.1.2
        with:
          path: ~/.konan
          key: ${{ runner.os }}-konan-cache-${{ hashFiles('buildSrc/build.gradle.kts') }}
          # An ordered list of keys to use for restoring the cache if no cache hit occurred for key
          restore-keys: |
            ${{ runner.os }}-konan-cache-
      - name: Own sdk dir
        if: runner.os == 'Linux'
        run: sudo chown $USER:$USER $ANDROID_HOME -R
      # download artifacts
      - name: Download ndk
        run: ./gradlew downloadNdk --info
      # ubuntu-latest, macos-latest, windows-latest -> should match the strategies of build
      - name: Download linux dist
        uses: actions/download-artifact@v2
        with:
          name: ubuntu-latest-dist
          path: artifacts/linux
      - name: Download mac dist
        uses: actions/download-artifact@v2
        with:
          name: macos-latest-dist
          path: artifacts/mac 
      - name: Download windows dist
        uses: actions/download-artifact@v2
        with:
          name: windows-latest-dist
          path: artifacts/windows
      - name: test and publish
        run: DIST_OUTPUTS=artifacts ./gradlew jvmTest createCombinedRepo  --info --stacktrace
      - name: Upload Repo
        uses: actions/upload-artifact@v2
        with:
          name: combined-repo
          path: build/dist/combinedRepo
