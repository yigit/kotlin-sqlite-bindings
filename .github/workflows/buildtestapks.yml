# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ ftl ]
  pull_request:
    branches: [ main ]
env:
  # Allow precise monitoring of the save/restore of Gradle User Home by `gradle-build-action`
  # See https://github.com/marketplace/actions/gradle-build-action?version=v2.1.1#cache-debugging-and-analysis
  GRADLE_BUILD_ACTION_CACHE_DEBUG_ENABLED: true
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup machine
        uses: ./.github/actions/commonSetup
        with:
          gradleCacheKey: ${{ secrets.GCP_ACCOUNT }}
          gradleCachePush: true
      - name: build test artifacts
        id: gradle-build-test-artifacts
        run: ./gradlew packageDebugAndroidTest --stacktrace --scan
        env:
          GRADLE_CACHE_KEY: ${{ secrets.GCP_ACCOUNT }}
          GRADLE_CACHE_PUSH: true
      - name: Build Scan for Test
        shell: bash
        run: echo "::notice title=Build and Test scan::${{ steps.gradle-build-test-artifacts.outputs.build-scan-url }}"
      - name: Upload apks
        uses: actions/upload-artifact@v2
        with:
          name: test-apks-${{ runner.os }}
          path: ./**/*.apk
